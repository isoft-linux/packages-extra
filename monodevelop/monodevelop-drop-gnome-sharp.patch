diff -Nur monodevelop-4.2.3/src/addins/GnomePlatform/Gio.cs monodevelop-4.2.3.new/src/addins/GnomePlatform/Gio.cs
--- monodevelop-4.2.3/src/addins/GnomePlatform/Gio.cs	2014-02-22 09:18:54.000000000 +0800
+++ monodevelop-4.2.3.new/src/addins/GnomePlatform/Gio.cs	2014-05-11 14:20:01.655982123 +0800
@@ -59,6 +59,8 @@
 		static extern IntPtr g_file_new_for_uri (IntPtr uri);
 		[DllImport (gio, CallingConvention = CallingConvention.Cdecl)]
 		static extern IntPtr g_file_query_info (IntPtr handle, IntPtr attrs, int flags, IntPtr cancellable, out IntPtr error);
+		[DllImport (gio, CallingConvention = CallingConvention.Cdecl)]
+		static extern bool g_app_info_launch_default_for_uri (IntPtr uri, IntPtr launch_context, out IntPtr error);
 		[DllImport (glib, CallingConvention = CallingConvention.Cdecl)]
 		static extern void g_list_free (IntPtr raw);
 		[DllImport (gobject, CallingConvention = CallingConvention.Cdecl)]
@@ -131,7 +133,12 @@
 			GLib.Marshaller.Free (content_type);
 			return GLib.Marshaller.PtrToStringGFree (desc);
 		}
-
+        public static void ShowUri(string uri)
+        {
+            IntPtr native = GLib.Marshaller.StringToPtrGStrdup (uri);
+            IntPtr error;
+            g_app_info_launch_default_for_uri(native, IntPtr.Zero, out error);
+        }
 		public static string GetMimeTypeForUri (string uri)
 		{
 			if (String.IsNullOrEmpty (uri))
diff -Nur monodevelop-4.2.3/src/addins/GnomePlatform/GnomePlatform.cs monodevelop-4.2.3.new/src/addins/GnomePlatform/GnomePlatform.cs
--- monodevelop-4.2.3/src/addins/GnomePlatform/GnomePlatform.cs	2014-02-22 09:18:54.000000000 +0800
+++ monodevelop-4.2.3.new/src/addins/GnomePlatform/GnomePlatform.cs	2014-05-11 14:20:06.381982472 +0800
@@ -26,7 +26,6 @@
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 //
 
-using Gnome;
 using MonoDevelop.Ide.Desktop;
 using System;
 using System.Collections.Generic;
@@ -40,44 +39,8 @@
 {
 	public class GnomePlatform : PlatformService
 	{
-		static bool useGio;
-
-		Gnome.ThumbnailFactory thumbnailFactory = new Gnome.ThumbnailFactory (Gnome.ThumbnailSize.Normal);
-
 		static GnomePlatform ()
 		{
-			try {
-				Gio.GetDefaultForType ("text/plain");
-				useGio = true;
-			} catch (Exception ex) {
-				Console.WriteLine (ex);
-			}
-			//apparently Gnome.Icon needs GnomeVFS initialized even when we're using GIO.
-			Gnome.Vfs.Vfs.Initialize ();
-		}
-		
-		DesktopApplication GetGnomeVfsDefaultApplication (string mimeType)
-		{
-			var app = Gnome.Vfs.Mime.GetDefaultApplication (mimeType);
-			if (app != null)
-				return (DesktopApplication) Marshal.PtrToStructure (app.Handle, typeof(DesktopApplication));
-			else
-				return null;
-		}
-		
-		IEnumerable<DesktopApplication> GetGnomeVfsApplications (string mimeType)
-		{
-			var def = GetGnomeVfsDefaultApplication (mimeType);
-			var list = new List<DesktopApplication> ();
-			var apps = Gnome.Vfs.Mime.GetAllApplications (mimeType);
-			foreach (var app in apps) {
-				var dap = (GnomeVfsApp) Marshal.PtrToStructure (app.Handle, typeof(GnomeVfsApp));
-				if (!string.IsNullOrEmpty (dap.Command) && !string.IsNullOrEmpty (dap.DisplayName) && !dap.Command.Contains ("monodevelop ")) {
-					var isDefault = def != null && def.Id == dap.Command;
-					list.Add (new GnomeDesktopApplication (dap.Command, dap.DisplayName, isDefault));
-				}
-			}
-			return list;
 		}
 		
 		public override IEnumerable<DesktopApplication> GetApplications (string filename)
@@ -88,22 +51,12 @@
 
 		IEnumerable<DesktopApplication> GetApplicationsForMimeType (string mimeType)
 		{
-			if (useGio)
-				return Gio.GetAllForType (mimeType);
-			else
-				return GetGnomeVfsApplications (mimeType);
+			return Gio.GetAllForType (mimeType);
 		}
 		
-		struct GnomeVfsApp {
-			public string Id, DisplayName, Command;
-		}
-
 		protected override string OnGetMimeTypeDescription (string mt)
 		{
-			if (useGio)
-				return Gio.GetMimeTypeDescription (mt);
-			else
-				return Gnome.Vfs.Mime.GetDescription (mt);
+			return Gio.GetMimeTypeDescription (mt);
 		}
 
 		protected override string OnGetMimeTypeForUri (string uri)
@@ -111,12 +64,10 @@
 			if (uri == null)
 				return null;
 			
-			if (useGio) {
-				string mt = Gio.GetMimeTypeForUri (uri);
-				if (mt != null)
-					return mt;
-			}
-			return Gnome.Vfs.MimeType.GetMimeTypeForUri (ConvertFileNameToVFS (uri));
+			string mt = Gio.GetMimeTypeForUri (uri);
+			if (mt != null)
+				return mt;
+		    return null;	
 		}
 		
 		protected override bool OnGetMimeTypeIsText (string mimeType)
@@ -131,16 +82,12 @@
 
 		public override void ShowUrl (string url)
 		{
-			Gnome.Url.Show (url);
+			Gio.ShowUri(url);
 		}
 		
 		public override string DefaultMonospaceFont {
 			get {
-				try {
-					return (string) (new GConf.Client ().Get ("/desktop/gnome/interface/monospace_font_name"));
-				} catch (Exception) {
-					return "Monospace 11";
-				}
+				return "Monospace 11";
 			}
 		}
 		
@@ -159,15 +106,6 @@
 				filename = EscapeFileName (filename);
 				if (filename == null)
 					return "gnome-fs-regular";
-				
-				string icon = null;
-				Gnome.IconLookupResultFlags result;
-				try {
-					icon = Gnome.Icon.LookupSync (IconTheme.Default, thumbnailFactory, filename, null, 
-					                              Gnome.IconLookupFlags.None, out result);
-				} catch {}
-				if (icon != null && icon.Length > 0)
-					return icon;
 			}			
 			return "gnome-fs-regular";
 			
diff -Nur monodevelop-4.2.3/src/addins/GnomePlatform/GnomePlatform.csproj monodevelop-4.2.3.new/src/addins/GnomePlatform/GnomePlatform.csproj
--- monodevelop-4.2.3/src/addins/GnomePlatform/GnomePlatform.csproj	2014-02-22 09:18:54.000000000 +0800
+++ monodevelop-4.2.3.new/src/addins/GnomePlatform/GnomePlatform.csproj	2014-05-11 14:20:07.367982545 +0800
@@ -50,15 +50,6 @@
     <Reference Include="glib-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f">
       <SpecificVersion>False</SpecificVersion>
     </Reference>
-    <Reference Include="gnome-sharp, Version=2.24.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f">
-      <SpecificVersion>False</SpecificVersion>
-    </Reference>
-    <Reference Include="gconf-sharp, Version=2.24.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f">
-      <SpecificVersion>False</SpecificVersion>
-    </Reference>
-    <Reference Include="gnome-vfs-sharp, Version=2.24.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f">
-      <SpecificVersion>False</SpecificVersion>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="..\..\core\MonoDevelop.Core\MonoDevelop.Core.csproj">
diff -Nur main/configure.in mainn/configure.in
--- main/configure.in	2015-07-08 16:15:00.000000000 +0000
+++ mainn/configure.in	2015-07-09 20:06:53.510096433 +0000
@@ -132,13 +132,6 @@
 PKG_CHECK_MODULES(MONODOC, monodoc >= $MONODOC_REQUIRED_VERSION)
 AC_SUBST(MONODOC_LIBS)
 
-dnl soft dependencies
-PKG_CHECK_MODULES(GNOME_SHARP, gnome-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION, [gnome_sharp=yes], [gnome_sharp=no])
-AC_SUBST(GNOME_SHARP_LIBS)
-PKG_CHECK_MODULES(GNOME_VFS_SHARP, gnome-vfs-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION, [gnome_vfs_sharp=yes], [gnome_vfs_sharp=no])
-AC_SUBST(GNOME_VFS_SHARP_LIBS)
-PKG_CHECK_MODULES(GCONF_SHARP, gconf-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION, [gconf_sharp=yes], [gconf_sharp=no])
-AC_SUBST(GCONF_SHARP_LIBS)
 
 gtksharp_prefix="`$PKG_CONFIG --variable=prefix gtk-sharp-2.0`"
 AC_SUBST(gtksharp_prefix)

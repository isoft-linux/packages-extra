diff -Nur iphonesdk-utils-2.0/genLocalization2/getLocalizedStringFromFile.cpp iphonesdk-utils-2.0fix/genLocalization2/getLocalizedStringFromFile.cpp
--- iphonesdk-utils-2.0/genLocalization2/getLocalizedStringFromFile.cpp	2015-12-13 04:07:37.200951107 +0800
+++ iphonesdk-utils-2.0fix/genLocalization2/getLocalizedStringFromFile.cpp	2015-12-13 04:09:14.166949371 +0800
@@ -58,26 +58,15 @@
 {
     clang::DiagnosticOptions diagnosticOptions;
 
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 2
     clang::TextDiagnosticPrinter *pTextDiagnosticPrinter =
         new clang::TextDiagnosticPrinter(
             llvm::outs(), &diagnosticOptions);
-#else 
-    clang::TextDiagnosticPrinter *pTextDiagnosticPrinter =
-        new clang::TextDiagnosticPrinter(
-            llvm::outs(), diagnosticOptions);
-#endif
+
     llvm::IntrusiveRefCntPtr<clang::DiagnosticIDs> pDiagIDs;
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 2 
     clang::DiagnosticsEngine *pDiagnosticsEngine =
         new clang::DiagnosticsEngine(pDiagIDs,
             &diagnosticOptions,
             pTextDiagnosticPrinter);
-#else
-    clang::DiagnosticsEngine *pDiagnosticsEngine =
-        new clang::DiagnosticsEngine(pDiagIDs,
-            pTextDiagnosticPrinter);
-#endif
 
     clang::LangOptions languageOptions;
     clang::FileSystemOptions fileSystemOptions;
@@ -88,62 +77,28 @@
         fileManager);
 
 
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7 
     const std::shared_ptr<clang::TargetOptions> targetOptions = std::make_shared<clang::TargetOptions>();
     targetOptions->Triple = triple;//"arm-apple-darwin11";//llvm::sys::getDefaultTargetTriple();
-#else
-    clang::TargetOptions targetOptions;
-    targetOptions.Triple = triple;//"arm-apple-darwin11";//llvm::sys::getDefaultTargetTriple();
-#endif
 
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 2 
     clang::TargetInfo *pTargetInfo = 
         clang::TargetInfo::CreateTargetInfo(
             *pDiagnosticsEngine,
-#if (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR == 2) || (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7)
             targetOptions
-#else
-            &targetOptions
-#endif
-            );   
+            );
+ 
     llvm::IntrusiveRefCntPtr<clang::HeaderSearchOptions> headerSearchOptions(new clang::HeaderSearchOptions());
-    for(int i = 0 ; i < includepaths.size(); i++)
+    for(unsigned long i = 0 ; i < includepaths.size(); i++) {
         headerSearchOptions->AddPath(includepaths.at(i),
                 clang::frontend::Angled,
                 false,
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR == 2 
-		false,
-		false,
-		false,
-#endif
                 false);
+    }
+
     clang::HeaderSearch headerSearch(headerSearchOptions,
-#if (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7)
                                      sourceManager,
-#else
-                                     fileManager,
-#endif
-                                     *pDiagnosticsEngine,
-                                     languageOptions,
-                                     pTargetInfo);
-#else
-    clang::TargetInfo *pTargetInfo =
-        clang::TargetInfo::CreateTargetInfo(
-            *pDiagnosticsEngine,
-            targetOptions);
-    clang::HeaderSearchOptions headerSearchOptions;
-    for(int i = 0 ; i < includepaths.size(); i++)
-        headerSearchOptions.AddPath(includepaths.at(i),
-                clang::frontend::Angled,
-                false,
-                false,
-                false);
-    clang::HeaderSearch headerSearch(fileManager,
                                      *pDiagnosticsEngine,
                                      languageOptions,
                                      pTargetInfo);
-    ApplyHeaderSearchOptions(headerSearch, headerSearchOptions, languageOptions, pTargetInfo->getTriple());
-#endif
 
 /*    headerSearchOptions->AddPath("/usr/share/iPhoneOS5.0.sdk/usr/include/c++/4.2.1/tr1/",
             clang::frontend::Angled,
@@ -158,55 +113,35 @@
 */
     clang::CompilerInstance compInst;
 
-#if LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >=2
     llvm::IntrusiveRefCntPtr<clang::PreprocessorOptions> pOpts (new clang::PreprocessorOptions());
     clang::Preprocessor preprocessor(
         pOpts,
         *pDiagnosticsEngine,
         languageOptions,
-#if ! (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7)
-        pTargetInfo,
-#endif
         sourceManager,
         headerSearch,
         compInst);
-#if (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7)
-   preprocessor.Initialize(*pTargetInfo);
-#endif
-
-   clang::FrontendOptions frontendOptions;
-   clang::RawPCHContainerReader Reader;
-   clang::InitializePreprocessor(
-        preprocessor,
-        *pOpts,
-#if (LLVM_VERSION_MAJOR == 3 && LLVM_VERSION_MINOR >= 7)
-        Reader,
-#else
-        *headerSearchOptions,
-#endif
-        frontendOptions);
 
-#else
-    clang::PreprocessorOptions pOpts;
+    preprocessor.Initialize(*pTargetInfo);
 
-    clang::Preprocessor preprocessor(
-        *pDiagnosticsEngine,
-        languageOptions,
-        pTargetInfo,
-        sourceManager,
-        headerSearch,
-        compInst);
+    clang::FrontendOptions frontendOptions;
 
-   clang::FrontendOptions frontendOptions;
-   clang::InitializePreprocessor(
+    clang::RawPCHContainerReader Reader;
+
+    clang::InitializePreprocessor(
         preprocessor,
-        pOpts,
-        headerSearchOptions,
+        *pOpts,
+        Reader,
         frontendOptions);
-#endif
+
+    clang::ApplyHeaderSearchOptions( headerSearch,//preprocessor.getHeaderSearchInfo(),
+	*headerSearchOptions,//compInst.getHeaderSearchOpts(),
+	preprocessor.getLangOpts(),
+	preprocessor.getTargetInfo().getTriple());
 
 
     const clang::FileEntry *pFile = fileManager.getFile(filename);
+    //sourceManager.setMainFileID( sourceManager.createFileID( pFile, clang::SourceLocation(), clang::SrcMgr::C_System));
     sourceManager.setMainFileID( sourceManager.createFileID( pFile, clang::SourceLocation(), clang::SrcMgr::C_User));
     //sourceManager.createMainFileID(pFile);
     preprocessor.EnterMainSourceFile();
diff -Nur iphonesdk-utils-2.0/genLocalization2/main.cpp iphonesdk-utils-2.0fix/genLocalization2/main.cpp
--- iphonesdk-utils-2.0/genLocalization2/main.cpp	2013-09-23 20:13:41.000000000 +0800
+++ iphonesdk-utils-2.0fix/genLocalization2/main.cpp	2015-12-13 04:09:21.988949231 +0800
@@ -96,7 +96,7 @@
     exit(0);
   }
 
-  string sdk_fullpath = "/usr/share/iPhoneOS5.0.sdk";
+  string sdk_fullpath = "/usr/share/iPhoneOS6.0.sdk";
   //if ~/.iphonesdk not exists, detect it.  
   if(::access(config_file.c_str(),R_OK) != 0 )
     detect_sdk_and_write_configfile(config_file);
@@ -111,7 +111,7 @@
 
   string standard_include = sdk_fullpath + "/usr/include";   
 
-  string cxxinclude = find_dir_in_dir(standard_include + "/c++","4.2.1" , "4", "");
+  string cxxinclude = find_dir_in_dir(standard_include + "/c++", "4.2.1" , "4", "");
   cxxinclude = standard_include + "/c++/" + cxxinclude;
 
   string cxxinclude1 = find_dir_in_dir(cxxinclude,"tr1" , "tr", "");
